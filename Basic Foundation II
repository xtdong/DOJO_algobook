// Previous Lengths - You are passed an array 
(similar to saying 'takes in an array' or 'given an array') 
containing strings.  Working within that same array, 
replace each string with a number - the length of the string at the previous array index - 
and return the array.  For example, previousLengths(["hello", "dojo", "awesome"]) 
should return ["hello", 5, 4]. Hint: Can for loops only go forward?

function newArr(arr){
  for (var i = arr.length - 1; i > 0; i--){
    arr[i] = arr[i -1 ].length;
  }
  console.log(arr);
}
var x = newArr(["hello", "dojo", "awesome"]);

//Reverse Array - Given an array, write a function that reverses its values, 
// in-place.  Example: reverse([3,1,6,4,2]) returns the same array, 
// but now contains values reversed like so... [2,4,6,1,3].  
// Do this without creating an empty temporary array.  
// (Hint: you'll need to swap values).

function reverseArr(arr){
  for (var i = 0; i < arr.length; i++){
    if (i < arr.length - i - 1){
      var temp = arr[arr.length - i - 1];
      arr[arr.length - i - 1] = arr[i];
      arr[i] = temp;
    }
  }
  console.log(arr);
}

var x = reverseArr([2,4,6,1,3]);


//Outlook: Negative - Given an array, 
//create and return a new one containing all the values of the original array, 
//but make them all negative (not simply multiplied by -1). Given [1,-3,5], return [-1,-3,-5].
function negArr(arr){
  var negArr = [];
  for (var i = 0; i < arr.length; i++){
    if (arr[i] < 0){
      negArr.push(arr[i]);
    } else {
      var x = 0 - arr[i];
      negArr.push(x);
    }
  }
  console.log(negArr);
}
var x = negArr([-1,2,3,4])

//Swap Toward the Center - Given an array, swap the first and last values, third and third-to-last values, etc. 
//Example: swapTowardCenter([true,42,"Ada",2,"pizza"]) turns the array into ["pizza", 42, "Ada", 2, true].  
//swapTowardCenter([1,2,3,4,5,6]) turns the array into [6,2,4,3,5,1].  No need to return the array this time.
function swapArr(arr){
  var i = 0;
  var j = arr.length - 1;
  while (i < j){
    var temp = arr[i];
    arr[i] = arr[j];
    arr[j] = temp;
    i = i + 2;
    j = j - 2;
  }
  console.log(arr);
}
var x = swapArr([1,2,3,4,5,7]);

// Scale the Array - Given an array arr and a number num, 
// multiply all values in the array arr by the number num, 
// and return the changed array arr.  
// For example, scaleArray([1,2,3], 3) should return [3,6,9].

function mulArr(arr){
  for (var i = 0; i < arr.length; i++){
    arr[i] = arr[i] * arr.length;
    console.log(arr[i]);
  }
  return arr;
}
mulArr([1,2,3]);
